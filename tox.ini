[tox]
envlist =
    lint
    py38-test
    combine-test-reports
isolated_build = True


[testenv:lint]
description = Run static checkers.
basepython = py38
extras = lint
passenv = CODEMETER_HOST
commands =
    # Check import ordering
    isort . --check
    # Check formatting
    black . --check
    # Check type hinting
    # mypy .
    # Lint source code
    # ruff check .
    # pylint . {posargs}
    # Check that function argument names are consistent between function signatures and docstrings
    # pylint --load-plugins pylint.extensions.docparams src {posargs}


[testenv:py38-test]
description = Run doc tests and unit tests.
package = wheel
extras = test
setenv =
    PY_IGNORE_IMPORTMISMATCH=1
    COVERAGE_FILE = reports{/}.coverage.{envname}
passenv = CODEMETER_HOST
commands =
    # Run tests and doctests from .py files
    pytest --junitxml=reports/pytest.xml.{envname} {posargs} src/ tests/


[testenv:combine-test-reports]
description = Combine test and coverage data from multiple test runs.
skip_install = true
setenv =
    COVERAGE_FILE = reports/.coverage
depends = py38-test
deps =
    junitparser
    coverage[toml]
commands =
    junitparser merge --glob reports/pytest.xml.* reports/pytest.xml
    coverage combine --keep
    coverage html
    coverage xml

[testenv:build]
description = Build the package.
extras = build
passenv = CODEMETER_HOST
commands =
    # Clean up build directories
    python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    # Build the package
    python -m build .
